pipeline {
    
    agent any
   
   environment {
       dockerImage =''
       registry = 'gafur/devops-project'
       registryCredential ='dockerhub_id'
   }
    
    stages {
        stage('checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/dgafur/devops-project.git']]])
            }
        }
        
        stage('Build Docker image') {
            steps {
                script {
                    dockerImage = docker.build registry
                }
            }
        }
        
        stage ('Uploading Image') {
            steps {
                script {
                        docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()    
                    }
                }
            }
        }
        
     // Stopping Docker containers for cleaner Docker run
     stage('docker stop container') {
         steps {
            sh 'docker ps -f name=devops-projectContainer -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=devops-projectContainer -q | xargs -r docker container rm'
         }
       }
    
    
    // Running Docker container, make sure port 80:80 is opened in 
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 80:80 --rm --name devops-projectContainer")
         }
      }
    }
  }
}    
